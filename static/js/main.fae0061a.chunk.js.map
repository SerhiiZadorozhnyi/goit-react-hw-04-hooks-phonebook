{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","index.js"],"names":["module","exports","ContactForm","contacts","onSubmit","useState","name","setName","number","setNumber","event","preventDefault","namesIsIn","reduce","acc","contact","numbersIsIn","includes","alert","contactCheck","className","styles","form","label","type","value","placeholder","onChange","currentTarget","input","button","Filter","ContactList","onDeleteContact","list","map","id","item","text","onClick","savedContacts","App","setContacts","filter","setFilter","firstUse","useRef","useEffect","current","parsedContacts","JSON","parse","localStorage","getItem","setItem","stringify","visibleContacts","normalizedFilter","toLowerCase","getVisibleContacts","totalContactsCount","length","container","title","bigText","uuidv4","contactId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6IACAA,EAAOC,QAAU,CAAC,KAAO,0BAA0B,MAAQ,2BAA2B,MAAQ,2BAA2B,OAAS,8B,mBCAlID,EAAOC,QAAU,CAAC,KAAO,0BAA0B,KAAO,0BAA0B,KAAO,0BAA0B,KAAO,0BAA0B,OAAS,8B,qCCA/JD,EAAOC,QAAU,CAAC,MAAQ,wB,qIC4ETC,MAxEjB,YAA8C,IAAvBC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,SAC7B,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KAgCA,OACE,uBAAML,SAZa,SAAAM,GACnBA,EAAMC,iBACNJ,EAAQ,IACRE,EAAU,IAtBS,WACnB,IAAMG,EAAYT,EAASU,QACzB,SAACC,EAAKC,GAAN,4BAAsBD,GAAtB,CAA2BC,EAAQT,SACnC,IAEIU,EAAcb,EAASU,QAC3B,SAACC,EAAKC,GAAN,4BAAsBD,GAAtB,CAA2BC,EAAQP,WACnC,KAGEI,EAAUK,SAASX,IAASU,EAAYC,SAAST,KACnDU,MAAM,GAAD,OAAIZ,GAAJ,OAAWE,EAAX,4BAGM,KAATF,GAA0B,KAAXE,GACjBU,MAAM,0BAQJC,IAIJf,EAASE,EAAME,IAIeY,UAAWC,IAAOC,KAAhD,UACE,wBAAOF,UAAWC,IAAOE,MAAzB,kBAEI,uBACAC,KAAK,OACLlB,KAAK,OACLmB,MAAOnB,EACPoB,YAAY,eACZC,SAAU,SAAAjB,GAAK,OAAIH,EAAQG,EAAMkB,cAAcH,QAC/CL,UAAWC,IAAOQ,WAItB,wBAAOT,UAAWC,IAAOE,MAAzB,oBAEI,uBACAC,KAAK,MACLlB,KAAK,SACLmB,MAAOjB,EACPkB,YAAY,YACZC,SAAU,SAAAjB,GAAK,OAAID,EAAUC,EAAMkB,cAAcH,QACjDL,UAAWC,IAAOQ,WAGtB,wBAAQL,KAAK,SAASJ,UAAWC,IAAOS,OAAxC,6B,iBCzCOC,MAnBf,YAAsC,IAApBN,EAAmB,EAAnBA,MAAOE,EAAY,EAAZA,SACrB,OACE,2DAEE,uBACEP,UAAWC,IAAOQ,MAClBL,KAAK,OACLC,MAAOA,EACPE,SAAUA,Q,gBCyBHK,MAhCjB,YAAqD,IAA9B7B,EAA6B,EAA7BA,SAAU8B,EAAmB,EAAnBA,gBAC7B,OACE,oBAAIb,UAAWC,IAAOa,KAAtB,SACG/B,EAASgC,KAAI,gBAAGC,EAAH,EAAGA,GAAI9B,EAAP,EAAOA,KAAME,EAAb,EAAaA,OAAb,OACZ,qBAAaY,UAAWC,IAAOgB,KAA/B,UACE,oBAAGjB,UAAWC,IAAOiB,KAArB,UACGhC,EADH,KACWE,KAEX,wBACEgB,KAAK,SACLe,QAAS,kBAAMN,EAAgBG,IAC/BhB,UAAWC,IAAOS,OAHpB,sBAJOM,S,wBCFbI,EAAgB,CACpB,CAAEJ,GAAI,OAAQ9B,KAAM,gBAAiBE,OAAQ,aAC7C,CAAE4B,GAAI,OAAQ9B,KAAM,iBAAkBE,OAAQ,aAC9C,CAAE4B,GAAI,OAAQ9B,KAAM,gBAAiBE,OAAQ,aAC7C,CAAE4B,GAAI,OAAQ9B,KAAM,iBAAkBE,OAAQ,cAgLjCiC,MA7Kf,WACE,MAAgCpC,mBAASmC,GAAzC,mBAAOrC,EAAP,KAAiBuC,EAAjB,KACA,EAA4BrC,mBAAS,IAArC,mBAAOsC,EAAP,KAAeC,EAAf,KACMC,EAAWC,kBAAO,GAExBC,qBAAU,WACR,GAAIF,EAASG,QAAS,CACpB,IAAMC,EAAiBC,KAAKC,MAAMC,aAAaC,QAAQ,aAOvD,OALIJ,GACFP,EAAYO,QAGdJ,EAASG,SAAU,GAGrBI,aAAaE,QAAQ,WAAYJ,KAAKK,UAAUpD,MAC/C,CAACA,IAEJ,IAsBMqD,EAZqB,WACzB,IAAMC,EAAmBd,EAAOe,cAEhC,OAAOvD,EAASwC,QAAO,SAAA5B,GAAO,OAC5BA,EAAQT,KAAKoD,cAAczC,SAASwC,MAQhBE,GAClBC,EAAqBzD,EAAS0D,OAEpC,OACE,mCACE,sBAAKzC,UAAWC,IAAOyC,UAAvB,UACE,0BAASC,MAAM,YAAY3C,UAAU,UAArC,UACI,oBAAIA,UAAWC,IAAO2C,QAAtB,uBACA,cAAC,EAAD,CAAa5D,SA9BJ,SAACE,EAAME,GACxB,IAAMO,EAAU,CACdqB,GAAI6B,cACJ3D,OACAE,UAGFkC,EAAY,CAAC3B,GAAF,mBAAcZ,MAuBkBA,SAAUA,OAEjD,0BAAS4D,MAAM,WAAW3C,UAAU,UAApC,UACI,oBAAIA,UAAWC,IAAO2C,QAAtB,sBACA,iGAAkBJ,KAClB,cAAC,EAAD,CAAQnC,MAAOkB,EAAQhB,SAAU,SAAAjB,GAAK,OAAIkC,EAAUlC,EAAMkB,cAAcH,UACxE,cAAC,EAAD,CACEtB,SAAUqD,EACVvB,gBApBU,SAAAiC,GACpBxB,EAAYvC,EAASwC,QAAO,SAAA5B,GAAO,OAAIA,EAAQqB,KAAO8B,kB,MC/C1DC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.fae0061a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__oQhFN\",\"label\":\"ContactForm_label__1xwI0\",\"input\":\"ContactForm_input__298_f\",\"button\":\"ContactForm_button__4XUh2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2dM7e\",\"item\":\"ContactList_item__14O2U\",\"text\":\"ContactList_text__tWt3l\",\"span\":\"ContactList_span__2IGpU\",\"button\":\"ContactList_button__2SXBL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__QHASL\"};","import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ContactForm.module.css';\r\n\r\n\r\nfunction ContactForm({ contacts, onSubmit }) {\r\n    const [name, setName] = useState('');\r\n    const [number, setNumber] = useState('');\r\n  \r\n    const contactCheck = () => {\r\n      const namesIsIn = contacts.reduce(\r\n        (acc, contact) => [...acc, contact.name],\r\n        [],\r\n      );\r\n      const numbersIsIn = contacts.reduce(\r\n        (acc, contact) => [...acc, contact.number],\r\n        [],\r\n      );\r\n  \r\n      if (namesIsIn.includes(name) || numbersIsIn.includes(number)) {\r\n        alert(`${name}${number} is already in contacts`);\r\n      }\r\n  \r\n      if (name === '' || number === '') {\r\n        alert('Enter all data, please');\r\n      }\r\n    };\r\n  \r\n    const handleSubmit = event => {\r\n      event.preventDefault();\r\n      setName('');\r\n      setNumber('');\r\n      if (contactCheck()) {\r\n        return;\r\n      }\r\n  \r\n      onSubmit(name, number);\r\n    };\r\n  \r\n    return (\r\n      <form onSubmit={handleSubmit} className={styles.form}>\r\n        <label className={styles.label}>\r\n          Name:\r\n            <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            placeholder=\"Jack Sparrow\"\r\n            onChange={event => setName(event.currentTarget.value)}\r\n            className={styles.input}\r\n          />\r\n        </label>\r\n  \r\n        <label className={styles.label}>\r\n          Number:\r\n            <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={number}\r\n            placeholder=\"111-11-11\"\r\n            onChange={event => setNumber(event.currentTarget.value)}\r\n            className={styles.input}\r\n          />\r\n        </label>\r\n        <button type=\"submit\" className={styles.button}>\r\n          Add contact\r\n          </button>\r\n      </form>\r\n    );\r\n  }\r\n  \r\n  \r\n  ContactForm.propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n    contacts: PropTypes.array.isRequired,\r\n  };\r\n  \r\n  export default ContactForm;\r\n\r\n\r\n// const INITIAL_STATE = {\r\n//     name: '',\r\n//     number: '',\r\n//   }\r\n\r\n// export default class ContactForm extends Component {\r\n\r\n//     state = INITIAL_STATE;\r\n\r\n//     handleChange = (type, e) => {\r\n//         const {contacts} = this.props;\r\n//         if (type==='name') {\r\n//           const contactInState = contacts.find(contact => contact.name.toLowerCase() === e.target.value.toLowerCase());\r\n//           if (contactInState) {\r\n//             alert(`${contactInState.name} is already in contacts!`);\r\n//           }\r\n//         }\r\n//         this.setState({[type]: e.target.value})\r\n//     }\r\n\r\n//     handleSubmit = e => {\r\n//         e.preventDefault();\r\n//         const {name, number} = this.state;\r\n//         const {contacts, onAddContact} = this.props;\r\n//         const contactInState = contacts.find(contact => contact.name.toLowerCase() === name.toLowerCase());\r\n//         contactInState && alert(`${contactInState.name} is already in contacts!`);\r\n//         if (!contactInState && name && number) {\r\n//             onAddContact(name, number);\r\n//             this.setState(INITIAL_STATE);\r\n//         }\r\n//     }\r\n    \r\n//     render() {\r\n//         const {name, number} = this.state;\r\n//         return (\r\n//             <form onSubmit={this.handleSubmit}>\r\n//                 <h3 className={styles.text}>Name</h3>\r\n//                 <label><input type=\"text\" value={name} onChange={e => this.handleChange('name', e)} /></label><br/>\r\n//                 <h3 className={styles.text}>Number</h3>\r\n//                 <label><input type=\"tel\" value={number} onChange={e => this.handleChange('number', e)} /></label><br/>\r\n//                 <div className={styles.divButton}>\r\n//                     <button type=\"submit\" className={styles.buttonForm}>Add contact</button>\r\n//                 </div>\r\n//             </form>\r\n//         )\r\n//     }\r\n// }\r\n\r\n// ContactForm.propTypes = {\r\n//     contacts: PropTypes.arrayOf(\r\n//         PropTypes.exact({\r\n//             id: PropTypes.string.isRequired,\r\n//             name: PropTypes.string.isRequired,\r\n//             number: PropTypes.string.isRequired,\r\n//         })\r\n//     ),\r\n//     onAddContact: PropTypes.func.isRequired,\r\n// }","import PropTypes from 'prop-types';\r\nimport styles from './Filter.module.css';\r\n\r\n\r\nfunction Filter({ value, onChange }) {\r\n    return (\r\n      <label>\r\n        Find contacts by name:\r\n        <input\r\n          className={styles.input}\r\n          type=\"text\"\r\n          value={value}\r\n          onChange={onChange}\r\n        />\r\n      </label>\r\n    );\r\n  }\r\n  \r\nFilter.propTypes = {\r\n    value: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n};\r\n  \r\nexport default Filter;","// import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ContactList.module.css';\r\n\r\n\r\nfunction ContactList({ contacts, onDeleteContact }) {\r\n    return (\r\n      <ul className={styles.list}>\r\n        {contacts.map(({ id, name, number }) => (\r\n          <li key={id} className={styles.item}>\r\n            <p className={styles.text}>\r\n              {name}: {number}\r\n            </p>\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => onDeleteContact(id)}\r\n              className={styles.button}\r\n            >\r\n              Delete\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    );\r\n  }\r\n  \r\n  ContactList.propTypes = {\r\n    onDeleteContact: PropTypes.func.isRequired,\r\n    contacts: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        id: PropTypes.string.isRequired,\r\n        name: PropTypes.string.isRequired,\r\n        number: PropTypes.string.isRequired,\r\n      }),\r\n    ),\r\n  };\r\n  \r\n  export default ContactList;\r\n\r\n\r\n\r\n// const ContactListItem = ({name, number, onClickRemove}) => {\r\n//     return (\r\n//         <li className={styles.contactListItem}>\r\n//             <p>{name}: {number}</p>\r\n//             <button \r\n//                 type=\"button\" \r\n//                 className={styles.contactListButton} \r\n//                 onClick={onClickRemove}\r\n//             >\r\n//                 Delete\r\n//             </button>\r\n//         </li>\r\n//     )\r\n// }\r\n\r\n// const ContactList = ({filteredContacts, onRemove}) => {\r\n//     return (\r\n//         filteredContacts.length > 0 && (\r\n//             <ul className={styles.contactList}>\r\n//                 {filteredContacts.map(({id, name, number}) => (\r\n//                     <ContactListItem key={id} name={name} number={number} onClickRemove={() => onRemove(id)} />\r\n//                 ))}\r\n//             </ul>\r\n//         )\r\n//     )\r\n// }\r\n\r\n// ContactListItem.propTypes = {\r\n//     name: PropTypes.string.isRequired,\r\n//     number: PropTypes.string.isRequired,\r\n//     onClickRemove: PropTypes.func.isRequired,\r\n// }\r\n\r\n// ContactList.propTypes = {\r\n//     filteredContacts: PropTypes.arrayOf(\r\n//         PropTypes.exact({\r\n//             id: PropTypes.string.isRequired,\r\n//             name: PropTypes.string.isRequired,\r\n//             number: PropTypes.string.isRequired,\r\n//         })\r\n//         ),\r\n//         onRemove: PropTypes.func.isRequired,\r\n// }\r\n\r\n// export default ContactList;","import React, { useState, useEffect, useRef } from 'react';\r\nimport ContactForm from 'components/ContactForm/ContactForm';\r\nimport Filter from 'components/Filter/Filter';\r\nimport ContactList from 'components/ContactList/ContactList';\r\nimport styles from './App.css';\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst savedContacts = [\r\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n];\r\n\r\nfunction App() {\r\n  const [contacts, setContacts] = useState(savedContacts);\r\n  const [filter, setFilter] = useState('');\r\n  const firstUse = useRef(true);\r\n\r\n  useEffect(() => {\r\n    if (firstUse.current) {\r\n      const parsedContacts = JSON.parse(localStorage.getItem('contacts'));\r\n\r\n      if (parsedContacts) {\r\n        setContacts(parsedContacts);\r\n      }\r\n\r\n      firstUse.current = false;\r\n      return;\r\n    }\r\n    localStorage.setItem('contacts', JSON.stringify(contacts));\r\n  }, [contacts]);\r\n\r\n  const addContact = (name, number) => {\r\n    const contact = {\r\n      id: uuidv4(),\r\n      name,\r\n      number,\r\n    };\r\n\r\n    setContacts([contact, ...contacts]);\r\n  };\r\n\r\n  const getVisibleContacts = () => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n  };\r\n\r\n  const deleteContact = contactId => {\r\n    setContacts(contacts.filter(contact => contact.id !== contactId));\r\n  };\r\n\r\n  const visibleContacts = getVisibleContacts();\r\n  const totalContactsCount = contacts.length;\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.container}>\r\n        <section title=\"Phonebook\" className=\"Section\">\r\n            <h1 className={styles.bigText}>Phonebook</h1>\r\n            <ContactForm onSubmit={addContact} contacts={contacts} />\r\n        </section>\r\n        <section title=\"Contacts\" className=\"Section\">\r\n            <h2 className={styles.bigText}>Contacts</h2>\r\n            <p>Общее кол-во: {totalContactsCount}</p>\r\n            <Filter value={filter} onChange={event => setFilter(event.currentTarget.value)} />\r\n            <ContactList\r\n              contacts={visibleContacts}\r\n              onDeleteContact={deleteContact}\r\n            />\r\n        </section>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\n\r\n// const savedContacts = [\r\n//   {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\r\n//   {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\r\n//   {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\r\n//   {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\r\n// ]\r\n\r\n// // class App = () => {\r\n// function App(){\r\n\r\n//   const [contacts, setContacts] = useState(savedContacts);\r\n//   const [filter, setFilter] = useState('');\r\n\r\n\r\n//   // state = {\r\n//   //   contacts: [\r\n//   //     {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\r\n//   //     {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\r\n//   //     {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\r\n//   //     {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\r\n//   //   ],\r\n//   //   filter: '',\r\n//   // }\r\n\r\n//   const addContact = (name, number) => {\r\n//     // const newContact = {\r\n//       const contact = {\r\n//       id: uuid_v4(),\r\n//       name,\r\n//       number,\r\n//     };\r\n//     setContacts([contact, ...contacts])\r\n//     // setContacts((contacts) => {contact, ...contacts});\r\n\r\n//     // this.setState(prevState => {\r\n//     //   return {\r\n//     //     contacts: [...prevState.contacts, newContact],\r\n//     //   }\r\n//     // });\r\n//   };\r\n\r\n//   const handleChangeFilter = filter => {\r\n//     this.setState({filter});\r\n//   };\r\n\r\n//   // const getFilteredContacts = () => {\r\n//   //   // const {contacts, filter} = this.state;\r\n//   //   const {contacts, filter} = filter;\r\n//   //   return contacts.filter(contact => contact.name.toLowerCase().includes(filter.toLowerCase()))\r\n//   // };\r\n\r\n//   const getFilteredContacts = () => {\r\n//     const normalizedFilter = filter.toLowerCase();\r\n\r\n//     return contacts.filter(contact =>\r\n//       contact.name.toLowerCase().includes(normalizedFilter),\r\n//     );\r\n//   };\r\n\r\n//   const deleteContact = contactId => {\r\n//     // this.setState(prevState => {\r\n//     //   return {\r\n//     //     contacts: prevState.contacts.filter(({id}) => id !== contactId)\r\n//     //   }\r\n//     // })\r\n//     setContacts(contacts.filter(contact => contact.id !== contactId));\r\n//   };\r\n\r\n//   componentDidMount() {\r\n//     const contacts = localStorage.getItem('contacts');\r\n//     const parsedContacts = JSON.parse(contacts);\r\n\r\n//     if (parsedContacts) {\r\n//       this.setState({contacts: parsedContacts});\r\n//     }\r\n//   };\r\n\r\n//   componentDidUpdate(prevProps, prevState) {\r\n//     if (this.state.contacts !== prevState.contacts) {\r\n//       localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\r\n//     }\r\n//   };\r\n\r\n//   const filteredContacts = getFilteredContacts();\r\n\r\n//   // render() {\r\n//   //   const {contacts, filter} = this.state;\r\n//     return(\r\n//       <>\r\n//         <div className=\"Container\">\r\n//           <section title=\"Phonebook\" className=\"Section\">\r\n//             <h1 className=\"bigText\">Phonebook</h1>\r\n//             <ContactForm contacts={contacts} onAddContact={addContact}/>\r\n//           </section>\r\n//           <section title=\"Contacts\" className=\"Section\">\r\n//             <h2 className=\"bigText\">Contacts</h2>\r\n//             <Filter value={filter} onChangeFilter={handleChangeFilter}/>\r\n//             <ContactList \r\n//               filteredContacts={filteredContacts} \r\n//               onRemove={deleteContact} />\r\n//           </section>\r\n//         </div>\r\n//       </>\r\n//     )\r\n//   // }\r\n// }\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport 'index.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}