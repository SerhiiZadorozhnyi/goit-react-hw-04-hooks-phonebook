{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","index.js"],"names":["module","exports","INITIAL_STATE","name","number","ContactForm","state","handleChange","type","e","contacts","props","contactInState","find","contact","toLowerCase","target","value","alert","setState","handleSubmit","preventDefault","onAddContact","this","onSubmit","className","styles","text","onChange","divButton","buttonForm","Component","Filter","onChangeFilter","filter","defaultProps","ContactListItem","onClickRemove","contactListItem","contactListButton","onClick","ContactList","filteredContacts","onRemove","length","contactList","map","id","App","addContact","newContact","uuid_v4","prevState","handleChangeFilter","getFilteredContacts","includes","handleRemove","contactId","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","title","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.54da25bc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonForm\":\"ContactForm_buttonForm__1b_GB\",\"text\":\"ContactForm_text__3dX6_\",\"divButton\":\"ContactForm_divButton__2E7R7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__1Kk-B\",\"contactListItem\":\"ContactList_contactListItem__2PYno\",\"contactListButton\":\"ContactList_contactListButton__1g_Lf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__2K5F-\"};","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\n// import './ContactForm.css';\r\nimport styles from './ContactForm.module.css'\r\n\r\nconst INITIAL_STATE = {\r\n    name: '',\r\n    number: '',\r\n  }\r\n\r\nexport default class ContactForm extends Component {\r\n\r\n    state = INITIAL_STATE;\r\n\r\n    handleChange = (type, e) => {\r\n        const {contacts} = this.props;\r\n        if (type==='name') {\r\n          const contactInState = contacts.find(contact => contact.name.toLowerCase() === e.target.value.toLowerCase());\r\n          if (contactInState) {\r\n            alert(`${contactInState.name} is already in contacts!`);\r\n          }\r\n        }\r\n        this.setState({[type]: e.target.value})\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        const {name, number} = this.state;\r\n        const {contacts, onAddContact} = this.props;\r\n        const contactInState = contacts.find(contact => contact.name.toLowerCase() === name.toLowerCase());\r\n        contactInState && alert(`${contactInState.name} is already in contacts!`);\r\n        if (!contactInState && name && number) {\r\n            onAddContact(name, number);\r\n            this.setState(INITIAL_STATE);\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        const {name, number} = this.state;\r\n        return (\r\n            <form onSubmit={this.handleSubmit}>\r\n                <h3 className={styles.text}>Name</h3>\r\n                <label><input type=\"text\" value={name} onChange={e => this.handleChange('name', e)} /></label><br/>\r\n                <h3 className={styles.text}>Number</h3>\r\n                <label><input type=\"tel\" value={number} onChange={e => this.handleChange('number', e)} /></label><br/>\r\n                <div className={styles.divButton}>\r\n                    <button type=\"submit\" className={styles.buttonForm}>Add contact</button>\r\n                </div>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nContactForm.propTypes = {\r\n    contacts: PropTypes.arrayOf(\r\n        PropTypes.exact({\r\n            id: PropTypes.string.isRequired,\r\n            name: PropTypes.string.isRequired,\r\n            number: PropTypes.string.isRequired,\r\n        })\r\n    ),\r\n    onAddContact: PropTypes.func.isRequired,\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Filter.module.css';\r\n\r\nexport default function Filter({value, onChangeFilter}) {\r\n    return (\r\n        <div className={styles.filter}>\r\n            <p>Find contacts by name</p>\r\n            <input type=\"text\" value={value} onChange={e => onChangeFilter(e.target.value)}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nFilter.defaultProps = {\r\n    value: '',\r\n}\r\n\r\nFilter.propTypes = {\r\n    value: PropTypes.string,\r\n    onChangeFilter: PropTypes.func.isRequired,\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ContactList.module.css';\r\n\r\nconst ContactListItem = ({name, number, onClickRemove}) => {\r\n    return (\r\n        <li className={styles.contactListItem}>\r\n            <p>{name}: {number}</p>\r\n            <button \r\n                type=\"button\" \r\n                className={styles.contactListButton} \r\n                onClick={onClickRemove}\r\n            >\r\n                Delete\r\n            </button>\r\n        </li>\r\n    )\r\n}\r\n\r\nconst ContactList = ({filteredContacts, onRemove}) => {\r\n    return (\r\n        filteredContacts.length > 0 && (\r\n            <ul className={styles.contactList}>\r\n                {filteredContacts.map(({id, name, number}) => (\r\n                    <ContactListItem key={id} name={name} number={number} onClickRemove={() => onRemove(id)} />\r\n                ))}\r\n            </ul>\r\n        )\r\n    )\r\n}\r\n\r\nexport default ContactList;\r\n\r\nContactListItem.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired,\r\n    onClickRemove: PropTypes.func.isRequired,\r\n}\r\n\r\nContactList.propTypes = {\r\n    filteredContacts: PropTypes.arrayOf(\r\n        PropTypes.exact({\r\n            id: PropTypes.string.isRequired,\r\n            name: PropTypes.string.isRequired,\r\n            number: PropTypes.string.isRequired,\r\n        })\r\n    ),\r\n    onRemove: PropTypes.func.isRequired,\r\n}","import React, { Component } from 'react';\n// import {uuid} from 'uuidv4';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport Filter from 'components/Filter/Filter';\nimport ContactList from 'components/ContactList/ContactList';\nimport './App.css';\nimport { v4 as uuid_v4 } from \"uuid\";\n\nclass App extends Component {\n\n  state = {\n    contacts: [\n      {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\n      {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\n      {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\n      {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\n    ],\n    filter: '',\n  }\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n\n    if (parsedContacts) {\n      this.setState({contacts: parsedContacts});\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  addContact = (name, number) => {\n    const newContact = {\n      id: uuid_v4(),\n      name,\n      number,\n    };\n    this.setState(prevState => {\n      return {\n        contacts: [...prevState.contacts, newContact],\n      }\n    });\n  }\n\n  handleChangeFilter = filter => {\n    this.setState({filter});\n  }\n\n  getFilteredContacts = () => {\n    const {contacts, filter} = this.state;\n    return contacts.filter(contact => contact.name.toLowerCase().includes(filter.toLowerCase()))\n  }\n\n  handleRemove = contactId => {\n    this.setState(prevState => {\n      return {\n        contacts: prevState.contacts.filter(({id}) => id !== contactId)\n      }\n    })\n  }\n\n  render() {\n    const {contacts, filter} = this.state;\n    return(\n      <>\n        <div className=\"Container\">\n          <section title=\"Phonebook\" className=\"Section\">\n            <h1 className=\"bigText\">Phonebook</h1>\n            <ContactForm contacts={contacts} onAddContact={this.addContact}/>\n          </section>\n          <section title=\"Contacts\" className=\"Section\">\n            <h2 className=\"bigText\">Contacts</h2>\n            <Filter value={filter} onChangeFilter={this.handleChangeFilter}/>\n            <ContactList filteredContacts={this.getFilteredContacts()} onRemove={this.handleRemove} />\n          </section>\n        </div>\n      </>\n    )\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}